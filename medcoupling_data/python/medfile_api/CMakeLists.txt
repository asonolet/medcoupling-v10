# Copyright (C) 2012-2024  CEA, EDF
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License along
# with this library; if not, write to the Free Software Foundation, Inc., 59
# Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email :
# webmaster.salome@opencascade.com
#
# Author : Anthony Geay (CEA/DEN)

if(MEDCOUPLING_BUILD_PY_TESTS)
  include(tests.set)
endif()

set_source_files_properties(MEDLoader.i PROPERTIES CPLUSPLUS ON)

# set(MEDLoader_SWIG_DPYS_FILES MEDLoaderCommon.i MEDLoaderTypemaps.i)

# SWIG must run after the doc if we want to have the docstrings extracted from
# Doxygen into the Python module:
# if(MEDCOUPLING_BUILD_DOC)
#   set(SWIG_MODULE_MEDLoader_EXTRA_DEPS
#       ${MEDLoader_SWIG_DPYS_FILES} ${medloader_HEADERS_HXX}
#       ${medcoupling_HEADERS_HXX} ${medcoupling_HEADERS_TXX}
#       ${interpkernel_HEADERS_HXX} ${interpkernel_HEADERS_TXX})
#   list(APPEND SWIG_MODULE_MEDLoader_EXTRA_FLAGS -DWITH_DOCSTRINGS)
#   list(APPEND SWIG_MODULE_MEDLoader_EXTRA_DEPS
#        ${PROJECT_BINARY_DIR}/doc/MEDLoader_doc.i swig_ready)
# endif()

if(WIN32)
  set_property(SOURCE MEDLoader.i PROPERTY COMPILE_DEFINITIONS WIN32)
endif()

swig_add_library(
  MEDLoader
  LANGUAGE python
  OUTPUT_DIR .
  SOURCES MEDLoader.i)

target_include_directories(
  MEDLoader
  PRIVATE
  "\$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>"
  "\$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../polymesh>")

set_property(TARGET MEDLoader PROPERTY SWIG_USE_TARGET_INCLUDE_DIRECTORIES TRUE)
set_property(TARGET MEDLoader PROPERTY INSTALL_RPATH ${MEDCOUPLING_INSTALL_PYTHON_LIBS_DEPS_RPATH})

target_link_libraries(
  ${SWIG_MODULE_MEDLoader_REAL_NAME}
  PUBLIC medloader medcouplingcpp
  PRIVATE Python::Module Python::NumPy)


if(WIN32)
  set_target_properties(${SWIG_MODULE_MEDLoader_REAL_NAME}
                        PROPERTIES DEBUG_OUTPUT_NAME _MEDLoader_d)
  # To increase the size of the .obj file on Windows because
  # MEDLoaderPYTHON_wrap.cxx, generated by SWIG, is too big
  target_compile_options(${SWIG_MODULE_MEDLoader_REAL_NAME} PRIVATE /bigobj)
endif()

install(
  TARGETS ${SWIG_MODULE_MEDLoader_REAL_NAME}
  # RUNTIME_DEPENDENCIES DIRECTORIES ${MEDCOUPLING_INSTALL_LIBS}
  DESTINATION ${MEDCOUPLING_INSTALL_PYTHON})
# install(FILES MEDLoader.i MEDLoaderTypemaps.i MEDLoaderCommon.i
#               MEDLoaderFinalize.i DESTINATION ${MEDCOUPLING_INSTALL_HEADERS})
# 
# salome_install_scripts(
#   ${CMAKE_CURRENT_BINARY_DIR}/MEDLoader.py ${MEDCOUPLING_INSTALL_PYTHON}
#   EXTRA_DPYS "${SWIG_MODULE_MEDLoader_REAL_NAME}")
# 
install(FILES MEDLoaderSplitter.py MEDLoaderFinalize.py
  DESTINATION ${MEDCOUPLING_INSTALL_PYTHON})

# install(FILES ${ALL_TESTS} MEDLoaderDataForTest.py MEDLoaderTest1.py
#               MEDLoaderTest2.py MEDLoaderTest3.py CrackAlongTest.py
#         DESTINATION ${MEDCOUPLING_INSTALL_TESTS})

install(FILES CaseIO.py CaseReader.py CaseWriter.py VTKReader.py
  DESTINATION ${MEDCOUPLING_INSTALL_BINS})

install(
  FILES case2med med2case ConvertMEDFileTo33.py ConvertMEDFileTo30.py
  PERMISSIONS
    OWNER_EXECUTE
    OWNER_WRITE
    OWNER_READ
    GROUP_EXECUTE
    GROUP_READ
    WORLD_EXECUTE
    WORLD_READ
  DESTINATION ${MEDCOUPLING_INSTALL_BINS})

# salome_generate_tests_environment(tests_env)
# 
# foreach(test ${BASE_TESTS})
#   get_filename_component(testname ${test} NAME_WE)
#   add_test(NAME ${testname} COMMAND ${PYTHON_EXECUTABLE}
#                                     ${CMAKE_CURRENT_SOURCE_DIR}/${test})
#   set_tests_properties(${testname} PROPERTIES ENVIRONMENT "${tests_env}")
# endforeach()
# 
# if(NUMPY_FOUND)
#   # Add Remapper to the Python path:
#   salome_accumulate_environment(
#     PYTHONPATH NOCHECK "${CMAKE_CURRENT_BINARY_DIR}/../../MEDCoupling_Swig")
#   salome_generate_tests_environment(tests_env)
#   foreach(test ${NUMPY_TESTS})
#     get_filename_component(testname ${test} NAME_WE)
#     add_test(NAME ${testname} COMMAND ${PYTHON_EXECUTABLE}
#                                       ${CMAKE_CURRENT_SOURCE_DIR}/${test})
#     set_tests_properties(${testname} PROPERTIES ENVIRONMENT "${tests_env}")
#   endforeach()
# endif(NUMPY_FOUND)
# 
# # Application tests
# 
# set(TEST_INSTALL_DIRECTORY ${MEDCOUPLING_INSTALL_TESTS}/MEDLoader_Swig)
# 
# set(MEDLOADER_TEST_FILES
#     ${ALL_TESTS}
#     MEDLoaderDataForTest.py
#     MEDLoaderTest1.py
#     MEDLoaderTest2.py
#     MEDLoaderTest3.py
#     CrackAlongTest.py
#     CaseIO.py
#     CaseReader.py
#     CaseWriter.py
#     VTKReader.py
#     MEDLoaderSplitter.py)
# 
# install(FILES ${MEDLOADER_TEST_FILES} DESTINATION ${TEST_INSTALL_DIRECTORY})
# 
# install(
#   FILES CTestTestfileInstall.cmake
#   DESTINATION ${TEST_INSTALL_DIRECTORY}
#   RENAME CTestTestfile.cmake)
# install(FILES tests.set DESTINATION ${TEST_INSTALL_DIRECTORY})
